// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestCinema.Domain.Database;

#nullable disable

namespace TestCinema.Domain.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestCinema.Contracts.Database.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CinemaId"));

                    b.Property<string>("CinemaName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("name");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer")
                        .HasColumnName("location_id");

                    b.Property<int>("TotalHalls")
                        .HasColumnType("integer")
                        .HasColumnName("total_halls");

                    b.HasKey("CinemaId");

                    b.ToTable("tbl_cinemas", "public");
                });

            modelBuilder.Entity("TestCinema.Contracts.Database.CinemaHall", b =>
                {
                    b.Property<int>("CinemaHallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CinemaHallId"));

                    b.Property<string>("CinemaHallName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("name");

                    b.Property<int>("CinemaId")
                        .HasColumnType("integer")
                        .HasColumnName("cinema_id");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("integer")
                        .HasColumnName("total_seats");

                    b.HasKey("CinemaHallId");

                    b.ToTable("tbl_cinemaHalls", "public");
                });

            modelBuilder.Entity("TestCinema.Contracts.Database.CinemaHallSeat", b =>
                {
                    b.Property<int>("CinemaHallSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CinemaHallSeatId"));

                    b.Property<int>("CinemaHallId")
                        .HasColumnType("integer")
                        .HasColumnName("cinemaHall_id");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_reserverd");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("SeatColumn")
                        .HasColumnType("integer")
                        .HasColumnName("seat_column");

                    b.Property<int>("SeatRow")
                        .HasColumnType("integer")
                        .HasColumnName("seat_row");

                    b.HasKey("CinemaHallSeatId");

                    b.ToTable("tbl_cinemaHallSeats", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
